//// <auto-generated />
//using System;
//using Microsoft.EntityFrameworkCore;
//using Microsoft.EntityFrameworkCore.Infrastructure;
//using Microsoft.EntityFrameworkCore.Migrations;
//using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
//using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
//using WebApplication.Models;

//namespace WebApplication.Migrations
//{
//    [DbContext(typeof(HelpToTeachContext))]
//    [Migration("20190304140620_Fifth")]
//    partial class Fifth
//    {
//        protected override void BuildTargetModel(ModelBuilder modelBuilder)
//        {
//#pragma warning disable 612, 618
//            modelBuilder
//                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
//                .HasAnnotation("ProductVersion", "2.2.2-servicing-10034")
//                .HasAnnotation("Relational:MaxIdentifierLength", 63);

//            modelBuilder.Entity("WebApplication.Models.Course", b =>
//                {
//                    b.Property<int>("Id")
//                        .ValueGeneratedOnAdd();

//                    b.Property<string>("Name");

//                    b.HasKey("Id");

//                    b.ToTable("Courses");
//                });

//            modelBuilder.Entity("WebApplication.Models.Group", b =>
//                {
//                    b.Property<int>("Id")
//                        .ValueGeneratedOnAdd();

//                    b.Property<string>("Name");

//                    b.HasKey("Id");

//                    b.ToTable("Groups");
//                });

//            modelBuilder.Entity("WebApplication.Models.GroupCourse", b =>
//                {
//                    b.Property<int>("Id")
//                        .ValueGeneratedOnAdd();

//                    b.Property<int>("CourseId");

//                    b.Property<int>("GroupId");

//                    b.Property<int>("UserId");

//                    b.HasKey("Id");

//                    b.HasIndex("CourseId");

//                    b.HasIndex("GroupId");

//                    b.HasIndex("UserId");

//                    b.ToTable("GroupCourses");
//                });

//            modelBuilder.Entity("WebApplication.Models.Student", b =>
//                {
//                    b.Property<int>("Id")
//                        .ValueGeneratedOnAdd();

//                    b.Property<DateTime>("BirthDate");

//                    b.Property<int>("CouchbaseId");

//                    b.Property<string>("FirstName");

//                    b.Property<int>("GroupId");

//                    b.Property<string>("LastName");

//                    b.Property<string>("MiddleName");

//                    b.HasKey("Id");

//                    b.HasIndex("GroupId");

//                    b.ToTable("Students");
//                });

//            modelBuilder.Entity("WebApplication.Models.User", b =>
//                {
//                    b.Property<int>("Id")
//                        .ValueGeneratedOnAdd();

//                    b.Property<string>("Auth0Id");

//                    b.Property<DateTime>("BirthDate");

//                    b.Property<string>("FirstName");

//                    b.Property<string>("LastName");

//                    b.Property<string>("MiddleName");

//                    b.Property<byte[]>("PasswordHash");

//                    b.Property<byte[]>("PasswordSalt");

//                    b.Property<byte>("Role");

//                    b.Property<string>("Username");

//                    b.HasKey("Id");

//                    b.ToTable("Users");
//                });

//            modelBuilder.Entity("WebApplication.Models.GroupCourse", b =>
//                {
//                    b.HasOne("WebApplication.Models.Course", "Course")
//                        .WithMany("GroupCourses")
//                        .HasForeignKey("CourseId")
//                        .OnDelete(DeleteBehavior.Cascade);

//                    b.HasOne("WebApplication.Models.Group", "Group")
//                        .WithMany("GroupCourses")
//                        .HasForeignKey("GroupId")
//                        .OnDelete(DeleteBehavior.Cascade);

//                    b.HasOne("WebApplication.Models.User", "User")
//                        .WithMany("GroupCourses")
//                        .HasForeignKey("UserId")
//                        .OnDelete(DeleteBehavior.Cascade);
//                });

//            modelBuilder.Entity("WebApplication.Models.Student", b =>
//                {
//                    b.HasOne("WebApplication.Models.Group", "Group")
//                        .WithMany("Students")
//                        .HasForeignKey("GroupId")
//                        .OnDelete(DeleteBehavior.Cascade);
//                });
//#pragma warning restore 612, 618
//        }
//    }
//}
